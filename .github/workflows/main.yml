name: Deploy to Amazon ECS

on:
  push:
    branches:
      - "main"
  pull_request:
      types: [opened, synchronize, reopened]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
   

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REPOSITORY: bitcoin 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
         docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
        echo "::set-output name=image::${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"
#     - name: SonarCloud Scan
#       uses: sonarsource/sonarcloud-github-action@master
        
    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: ./
        args: >
          -Dsonar.organization=daniaernest
          -Dsonar.projectKey=DaniaErnest_btc
          
     # -Dsonar.python.coverage.reportPaths=coverage.xml
#       -Dsonar.sources=lib/
#       -Dsonar.test.exclusions=tests/**
#       -Dsonar.tests=tests/
#       -Dsonar.verbose=true


